{
  "version": 3,
  "sources": ["../../../app/routes/kategorien.$slug.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/kategorien.$slug.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/kategorien.$slug.tsx\");\n  import.meta.hot.lastModified = \"1732709207627.2612\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nexport const loader = async ({\n  params\n}) => {\n  const query = `\n    query Produkte_Kategorien($Slug: String) {\n      Kategorien(filter: { slug: { _eq: $Slug } }) {\n        Kategoriename\n        Kategoriebeschreibung\n      }\n      Produkte_Kategorien(filter: { Kategorien_id: { slug: { _eq: $Slug } } }) {\n        Produkte_id {\n          Produkttitel\n          Preis\n          Slug\n          Medien(filter: { Medien_id: { Ist_Hauptbild_ja_nein: { _eq: true } } }) {\n            Medien_id {\n              Bild {\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n  const response = await fetch(\"https://directus.meineapp.uk/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query,\n      variables: {\n        Slug: params.slug\n      }\n    })\n  });\n  const {\n    data\n  } = await response.json();\n  if (!data.Kategorien?.[0]) {\n    throw new Response(\"Kategorie nicht gefunden\", {\n      status: 404\n    });\n  }\n  return json({\n    category: data.Kategorien[0],\n    products: data.Produkte_Kategorien\n  });\n};\nexport const meta = ({\n  data\n}) => {\n  if (!data) {\n    return [{\n      title: \"Kategorie nicht gefunden | M\u00F6bel Store\"\n    }, {\n      name: \"description\",\n      content: \"Die gesuchte Kategorie wurde nicht gefunden.\"\n    }];\n  }\n  return [{\n    title: `${data.category.Kategoriename} | M\u00F6bel Store`\n  }, {\n    name: \"description\",\n    content: data.category.Kategoriebeschreibung\n  }];\n};\nexport default function CategoryPage() {\n  _s();\n  const {\n    category,\n    products\n  } = useLoaderData();\n  return <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-6 tracking-tight\">\n            {category.Kategoriename}\n          </h1>\n          {category.Kategoriebeschreibung && <p className=\"text-lg text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n              {category.Kategoriebeschreibung}\n            </p>}\n          <div className=\"w-40 h-1 bg-blue-600 mx-auto mt-8 rounded-full\"></div>\n        </div>\n\n        {/* Products Grid */}\n        <div className=\"grid grid-cols-1 gap-y-12 gap-x-8 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\n          {products?.filter(item => item?.Produkte_id).map(item => {\n          if (!item?.Produkte_id) return null;\n          return <Link key={item.Produkte_id.Produkttitel || 'unnamed-product'} to={`/product/${item.Produkte_id.Slug || 'unnamed-product'}`} className=\"group relative flex flex-col bg-white rounded-2xl shadow-sm hover:shadow-lg transition-shadow duration-300 overflow-hidden\">\n                {/* Image Container */}\n                <div className=\"aspect-w-1 aspect-h-1 w-full bg-gray-200 xl:aspect-w-7 xl:aspect-h-8 relative\">\n                  {item.Produkte_id.Medien?.[0]?.Medien_id?.Bild?.id ? <img src={`https://directus.meineapp.uk/assets/${item.Produkte_id.Medien[0].Medien_id.Bild.id}`} alt={item.Produkte_id.Produkttitel || 'Produktbild'} className=\"h-full w-full object-cover object-center transform group-hover:scale-105 transition-transform duration-300\" /> : <div className=\"h-full w-full flex items-center justify-center bg-gray-100\">\n                      <svg className=\"w-16 h-16 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                      </svg>\n                    </div>}\n                </div>\n\n                {/* Content Container */}\n                <div className=\"p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2 group-hover:text-blue-600 transition-colors duration-200\">\n                    {item.Produkte_id.Produkttitel || 'Unbenanntes Produkt'}\n                  </h3>\n                  \n                  <div className=\"mt-4 flex items-center justify-between\">\n                    <p className=\"text-xl font-bold text-blue-600\">\n                      {new Intl.NumberFormat('de-DE', {\n                    style: 'currency',\n                    currency: 'EUR'\n                  }).format(item.Produkte_id.Preis || 0)}\n                    </p>\n                    <span className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 transition-colors duration-200\">\n                      Details\n                    </span>\n                  </div>\n                </div>\n              </Link>;\n        })}\n        </div>\n\n        {/* Empty State */}\n        {(!products || products.length === 0) && <div className=\"text-center py-16 bg-gray-50 rounded-2xl\">\n            <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\" />\n            </svg>\n            <h3 className=\"mt-4 text-lg font-medium text-gray-900\">Keine Produkte gefunden</h3>\n            <p className=\"mt-2 text-gray-600\">\n              In dieser Kategorie sind derzeit keine Produkte verf\u00FCgbar.\n            </p>\n          </div>}\n      </div>\n    </div>;\n}\n_s(CategoryPage, \"QuBmgysSdpdLohUbX8OGorb7E3g=\", false, function () {\n  return [useLoaderData];\n});\n_c = CategoryPage;\nvar _c;\n$RefreshReg$(_c, \"CategoryPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
