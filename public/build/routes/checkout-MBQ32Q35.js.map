{
  "version": 3,
  "sources": ["../../../app/routes/checkout.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/checkout.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/checkout.tsx\");\n  import.meta.hot.lastModified = \"1732702959327.2583\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, useLoaderData } from \"@remix-run/react\";\nimport { useCart } from \"~/context/CartContext\";\nimport { ArrowLeft } from \"lucide-react\";\nexport const loader = async () => {\n  return json({\n    countries: [{\n      code: \"US\",\n      name: \"United States\"\n    }, {\n      code: \"CA\",\n      name: \"Canada\"\n    }, {\n      code: \"GB\",\n      name: \"United Kingdom\"\n    }\n    // Add more countries as needed\n    ]\n  });\n};\nexport default function Checkout() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    items,\n    total,\n    removeItem,\n    updateQuantity\n  } = useCart();\n  const {\n    countries\n  } = useLoaderData();\n  const subtotal = total;\n  const shipping = 10.00; // Fixed shipping rate for now\n  const tax = total * 0.1; // 10% tax rate\n  const finalTotal = subtotal + shipping + tax;\n  if (!items || items.length === 0) {\n    return <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"mx-auto max-w-7xl px-4 pt-16 pb-24 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">Your cart is empty</h1>\n            <p className=\"mt-4 text-gray-500\">Add some items to your cart to proceed with checkout.</p>\n            <div className=\"mt-6\">\n              <Link to=\"/\" className=\"inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700\">\n                Continue Shopping\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n  function OrderSummary() {\n    _s();\n    const {\n      items,\n      total\n    } = useCart();\n    return <div className=\"mt-10 lg:mt-0\">\n        <h2 className=\"text-lg font-medium text-gray-900\">Order summary</h2>\n\n        <div className=\"mt-4 bg-white border border-gray-200 rounded-lg shadow-sm\">\n          <h3 className=\"sr-only\">Items in your cart</h3>\n          <ul role=\"list\" className=\"divide-y divide-gray-200\">\n            {items.map(item => <li key={item.id} className=\"flex py-6 px-4 sm:px-6\">\n                {item.image && <div className=\"flex-shrink-0\">\n                    <img src={item.image} alt={item.name} className=\"w-20 h-20 rounded-md object-center object-cover\" />\n                  </div>}\n                <div className=\"ml-6 flex-1 flex flex-col\">\n                  <div className=\"flex\">\n                    <div className=\"min-w-0 flex-1\">\n                      <h4 className=\"text-sm\">\n                        <a href=\"#\" className=\"font-medium text-gray-700 hover:text-gray-800\">\n                          {item.name}\n                        </a>\n                      </h4>\n                      {/* Display selected options */}\n                      {item.selectedOptions && Object.entries(item.selectedOptions).length > 0 && <div className=\"mt-1 text-sm text-gray-500\">\n                          {Object.entries(item.selectedOptions).map(([key, value]) => <div key={key} className=\"flex items-center gap-1\">\n                              <span className=\"font-medium capitalize\">{key}:</span>\n                              <span>{value}</span>\n                            </div>)}\n                        </div>}\n                    </div>\n                    <div className=\"ml-4 flex-shrink-0 flow-root\">\n                      <p className=\"text-sm font-medium text-gray-900\">${item.price * item.quantity}</p>\n                    </div>\n                  </div>\n                  <div className=\"flex-1 pt-2 flex items-end justify-between\">\n                    <p className=\"mt-1 text-sm font-medium text-gray-500\">Qty {item.quantity}</p>\n                  </div>\n                </div>\n              </li>)}\n          </ul>\n\n          <dl className=\"border-t border-gray-200 py-6 px-4 space-y-6 sm:px-6\">\n            <div className=\"flex items-center justify-between\">\n              <dt className=\"text-sm\">Subtotal</dt>\n              <dd className=\"text-sm font-medium text-gray-900\">${subtotal.toFixed(2)}</dd>\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <dt className=\"text-sm\">Shipping</dt>\n              <dd className=\"text-sm font-medium text-gray-900\">${shipping.toFixed(2)}</dd>\n            </div>\n            <div className=\"flex items-center justify-between border-t border-gray-200 pt-6\">\n              <dt className=\"text-base font-medium\">Total</dt>\n              <dd className=\"text-base font-medium text-gray-900\">${finalTotal.toFixed(2)}</dd>\n            </div>\n          </dl>\n        </div>\n      </div>;\n  }\n  _s(OrderSummary, \"sulvaxeD6t5bDn/5jZPkkQ/WB0A=\", false, function () {\n    return [useCart];\n  });\n  return <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n        {/* Back button */}\n        <div className=\"py-6\">\n          <Link to=\"/\" className=\"inline-flex items-center text-sm font-medium text-gray-700 hover:text-indigo-600\">\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back to shopping\n          </Link>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-x-16 lg:grid-cols-5\">\n          {/* Cart items and summary - 2 columns */}\n          <div className=\"lg:col-span-2\">\n            <OrderSummary />\n          </div>\n\n          {/* Checkout form - 3 columns */}\n          <div className=\"mt-10 lg:col-span-3 lg:mt-0\">\n            <Form method=\"post\">\n              <div className=\"space-y-12\">\n                <div>\n                  <h2 className=\"text-lg font-medium text-gray-900\">Contact information</h2>\n                  <div className=\"mt-4\">\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                      Email address\n                    </label>\n                    <div className=\"mt-1\">\n                      <input type=\"email\" id=\"email\" name=\"email\" autoComplete=\"email\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <h2 className=\"text-lg font-medium text-gray-900\">Shipping information</h2>\n                  <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-6\">\n                    <div>\n                      <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700\">\n                        First name\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"text\" id=\"firstName\" name=\"firstName\" autoComplete=\"given-name\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700\">\n                        Last name\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"text\" id=\"lastName\" name=\"lastName\" autoComplete=\"family-name\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700\">\n                        Company (optional)\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"text\" id=\"company\" name=\"company\" className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\n                        Address\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"text\" id=\"address\" name=\"address\" autoComplete=\"street-address\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label htmlFor=\"apartment\" className=\"block text-sm font-medium text-gray-700\">\n                        Apartment, suite, etc.\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"text\" id=\"apartment\" name=\"apartment\" className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                        City\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"text\" id=\"city\" name=\"city\" autoComplete=\"address-level2\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700\">\n                        Country\n                      </label>\n                      <div className=\"mt-1\">\n                        <select id=\"country\" name=\"country\" autoComplete=\"country-name\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\">\n                          <option value=\"\">Select a country</option>\n                          {countries.map(country => <option key={country.code} value={country.code}>\n                              {country.name}\n                            </option>)}\n                        </select>\n                      </div>\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"state\" className=\"block text-sm font-medium text-gray-700\">\n                        State / Province\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"text\" id=\"state\" name=\"state\" autoComplete=\"address-level1\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n\n                    <div>\n                      <label htmlFor=\"postal-code\" className=\"block text-sm font-medium text-gray-700\">\n                        ZIP / Postal code\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"text\" id=\"postal-code\" name=\"postal-code\" autoComplete=\"postal-code\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n\n                    <div className=\"sm:col-span-2\">\n                      <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\n                        Phone\n                      </label>\n                      <div className=\"mt-1\">\n                        <input type=\"tel\" id=\"phone\" name=\"phone\" autoComplete=\"tel\" required className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-base py-2 px-3\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <button type=\"submit\" className=\"w-full rounded-md border border-transparent bg-indigo-600 px-4 py-3 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\">\n                    Complete order\n                  </button>\n                </div>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>;\n}\n_s2(Checkout, \"YYDLjyr8ZFgCU716qNjh2wCA25Y=\", false, function () {\n  return [useCart, useLoaderData];\n});\n_c = Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["items", "total"]
}
